/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Snail to Riches
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç HTTP —Å–µ—Ä–≤–µ—Ä, ngrok –∏ –±–æ—Ç–∞ Telegram –≤ –æ–¥–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
 */

const express = require('express');
const path = require('path');
const fs = require('fs');
const { spawn, exec } = require('child_process');
const ngrok = require('ngrok');
const TelegramBot = require('node-telegram-bot-api');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PORT = 3001;
const BOT_TOKEN = '7686647298:AAGmRnfGceCksKJUu8jk0e1dZOakgkn_V1s';
const NGROK_AUTH_TOKEN = '2vB1076Y3cPh8Kif6NVuDIV8eAi_2Vnu9ZFtY3SQSQ4bUQCj1';

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
async function cleanup() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...');

  try {
    await ngrok.kill();
    console.log('‚úÖ ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  } catch (error) {
    console.log('‚ÑπÔ∏è ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }

  try {
    if (process.platform === 'win32') {
      exec('taskkill /F /IM node.exe /T', { stdio: 'ignore' });
    } else {
      exec('pkill -f "node start-full\\.js"', { stdio: 'ignore' });
    }
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Express
function startServer() {
  return new Promise((resolve) => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞...');
    
    const app = express();
    app.use(express.static(path.join(__dirname)));
    
    const server = app.listen(PORT, () => {
      console.log(`‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      resolve(server);
    });
  });
}

// –ó–∞–ø—É—Å–∫ Ngrok
async function startNgrok() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ ngrok...');
  
  try {
    // –ó–∞–ø—É—Å–∫ —Ç—É–Ω–Ω–µ–ª—è
    const url = await ngrok.connect({
      addr: PORT,
      authtoken: NGROK_AUTH_TOKEN
    });
    
    console.log(`‚úÖ ngrok –∑–∞–ø—É—â–µ–Ω —Å URL: ${url}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ —Ñ–∞–π–ª –¥–ª—è –±–æ—Ç–∞
    fs.writeFileSync('ngrok-url.txt', url);
    
    return url;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ngrok:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞
function startBot(url) {
  console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
  
  const bot = new TelegramBot(BOT_TOKEN, { polling: true });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    
    if (url) {
      const keyboard = {
        inline_keyboard: [[
          {
            text: 'üéÆ –ò–≥—Ä–∞—Ç—å',
            web_app: { url }
          }
        ]]
      };
      
      bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å –≤ Snail to Riches?', {
        reply_markup: keyboard
      });
      
      console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${msg.from.username || msg.from.id}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ URL');
      bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∏–≥—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });
  
  console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
  return bot;
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('========================================');
  console.log('üêå –ó–∞–ø—É—Å–∫ Snail to Riches');
  console.log('========================================');
  
  try {
    // –û—á–∏—Å—Ç–∫–∞
    await cleanup();
    
    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    const server = await startServer();
    
    // –ó–∞–ø—É—Å–∫ ngrok
    const url = await startNgrok();
    
    // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    const bot = startBot(url);
    
    console.log('========================================');
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!');
    console.log(`üåê URL: ${url}`);
    console.log('========================================');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGINT', async () => {
      console.log('üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
      
      try {
        await ngrok.kill();
        console.log('‚úÖ ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ ngrok:', error);
      }
      
      if (bot) {
        bot.stopPolling();
        console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
      
      if (server) {
        server.close(() => {
          console.log('‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
          console.log('üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!');
          process.exit(0);
        });
      } else {
        process.exit(0);
      }
    });
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
main(); 