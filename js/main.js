// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–∑ Telegram
import { initTelegramLauncher } from './modules/telegram-launcher.js';

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≥–æ–Ω–∫–∏
import { initRaceRenderer, startRace as startRaceRenderer, stopRace as stopRaceRenderer } from './modules/race-renderer.js';

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
const gameState = {
    selectedSnail: null,
    betAmount: 10,
    isRacing: false,
    walletConnected: false,
    balance: 100
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const startScreen = document.getElementById('start-screen');
const loadingScreen = document.getElementById('loading-screen');
const raceScreen = document.getElementById('race-screen');
const resultsScreen = document.getElementById('results-screen');
const betInput = document.getElementById('bet-amount');
const balanceAmount = document.getElementById('balance-amount');
const connectWalletBtn = document.getElementById('connect-wallet');
const startRaceBtn = document.getElementById('start-race');
const playAgainBtn = document.getElementById('play-again');
const resultMessage = document.getElementById('result-message');
const winningsAmount = document.getElementById('winnings-amount');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
function initGame() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ —É–ª–∏—Ç–æ–∫
    initSnailSelection();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    initEventListeners();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Canvas
    initCanvas();
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—ã Telegram
    applyTelegramTheme();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ—à–µ–ª–µ–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    autoConnectWallet();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    updateBalance(gameState.balance);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º Telegram
function applyTelegramTheme() {
    document.documentElement.style.setProperty('--tg-theme-bg-color', tg.themeParams.bg_color || '#F0F2F5');
    document.documentElement.style.setProperty('--tg-theme-text-color', tg.themeParams.text_color || '#1A1A1A');
    document.documentElement.style.setProperty('--tg-theme-hint-color', tg.themeParams.hint_color || '#7D7D7D');
    document.documentElement.style.setProperty('--tg-theme-button-color', tg.themeParams.button_color || '#3498DB');
    document.documentElement.style.setProperty('--tg-theme-button-text-color', tg.themeParams.button_text_color || '#FFFFFF');
    document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', tg.themeParams.secondary_bg_color || '#FFFFFF');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ —É–ª–∏—Ç–æ–∫
function initSnailSelection() {
    const snailGrid = document.querySelector('.snail-grid');
    const snails = [
        { id: 'racer', name: '–ì–æ–Ω—â–∏–∫', color: 'üî¥', speed: 1.5, description: '–ë—ã—Å—Ç—Ä–∞—è —É–ª–∏—Ç–∫–∞ —Å —É—Å–∫–æ—Ä–µ–Ω–∏—è–º–∏' },
        { id: 'explorer', name: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', color: 'üü¢', speed: 1.2, description: '–õ—é–±–æ–ø—ã—Ç–Ω–∞—è —É–ª–∏—Ç–∫–∞' },
        { id: 'snake', name: '–ó–º–µ–π–∫–∞', color: 'üîµ', speed: 1.3, description: '–î–≤–∏–∂–µ—Ç—Å—è –∏–∑–≤–∏–ª–∏—Å—Ç—ã–º–∏ –ø—É—Ç—è–º–∏' },
        { id: 'stubborn', name: '–£–ø—Ä—è–º–∞—è', color: 'üü£', speed: 0.9, description: '–ú–æ–∂–µ—Ç –∑–∞—Å—Ç—Ä–µ–≤–∞—Ç—å' },
        { id: 'default', name: '–¢—É–ø–∏—á–æ–∫', color: 'üü°', speed: 1.1, description: '–õ—é–±–∏—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ —Ç—É–ø–∏–∫–∏' }
    ];

    snails.forEach(snail => {
        const button = document.createElement('button');
        button.className = 'snail-button';
        button.innerHTML = `
            <span class="emoji">${snail.color}</span>
            <span class="name">${snail.name}</span>
            <span class="speed">–°–∫–æ—Ä–æ—Å—Ç—å: ${snail.speed}</span>
        `;
        button.onclick = () => selectSnail(snail.id);
        button.setAttribute('data-snail-id', snail.id);
        snailGrid.appendChild(button);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function initEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
    connectWalletBtn.addEventListener('click', connectWallet);
    
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –≥–æ–Ω–∫–∏
    startRaceBtn.addEventListener('click', startRace);
    
    // –ö–Ω–æ–ø–∫–∞ "–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
    playAgainBtn.addEventListener('click', resetGame);
    
    // –í–≤–æ–¥ —Å—Ç–∞–≤–∫–∏
    betInput.addEventListener('input', (e) => {
        gameState.betAmount = parseInt(e.target.value) || 0;
        checkCanStartRace();
    });
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ–Ω–∫–æ–π
    document.getElementById('zoom-in').addEventListener('click', () => zoomCanvas(1.2));
    document.getElementById('zoom-out').addEventListener('click', () => zoomCanvas(0.8));
    document.getElementById('follow-snail').addEventListener('click', toggleFollowSnail);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–Ω–∫–∏ (–±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ —Å–∏–º—É–ª—è—Ü–∏–∏ –≥–æ–Ω–∫–∏)
    window.addEventListener('race-finished', handleRaceFinished);
}

// –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞
function zoomCanvas(factor) {
    console.log(`–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–æ–ª—Å—Ç–∞ —Å —Ñ–∞–∫—Ç–æ—Ä–æ–º: ${factor}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
}

// –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ —É–ª–∏—Ç–∫–æ–π
function toggleFollowSnail() {
    console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ —É–ª–∏—Ç–∫–æ–π');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Canvas
function initCanvas() {
    const canvas = document.getElementById('race-canvas');
    const ctx = canvas.getContext('2d');
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ canvas
    function resizeCanvas() {
        canvas.width = canvas.offsetWidth;
        canvas.height = canvas.offsetHeight;
    }
    
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–æ–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    ctx.fillStyle = '#f0f2f5';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
}

// –í—ã–±–æ—Ä —É–ª–∏—Ç–∫–∏
function selectSnail(snailId) {
    gameState.selectedSnail = snailId;
    document.querySelectorAll('.snail-button').forEach(btn => {
        btn.classList.remove('selected');
        if (btn.getAttribute('data-snail-id') === snailId) {
            btn.classList.add('selected');
        }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É
    checkCanStartRace();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É
function checkCanStartRace() {
    if (gameState.selectedSnail && gameState.walletConnected && gameState.betAmount > 0 && gameState.betAmount <= gameState.balance) {
        startRaceBtn.disabled = false;
    } else {
        startRaceBtn.disabled = true;
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
function autoConnectWallet() {
    setTimeout(() => {
        connectWallet();
    }, 500);
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
function connectWallet() {
    try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ—à–µ–ª—å–∫—É
        gameState.walletConnected = true;
        connectWalletBtn.textContent = '–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω';
        connectWalletBtn.classList.add('connected');
        connectWalletBtn.disabled = true;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É
        checkCanStartRace();
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        tg.showPopup({
            title: '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ!',
            message: '–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω',
            buttons: [{type: 'ok'}]
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞:', error);
        tg.showPopup({
            title: '–û—à–∏–±–∫–∞',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫',
            buttons: [{type: 'ok'}]
        });
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function updateBalance(newBalance) {
    gameState.balance = newBalance;
    balanceAmount.textContent = newBalance;
}

// –ù–∞—á–∞–ª–æ –≥–æ–Ω–∫–∏
function startRace() {
    if (!canStartRace()) {
        tg.showPopup({
            title: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É',
            message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ç–∫—É, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É',
            buttons: [{type: 'ok'}]
        });
        return;
    }
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É —Å –±–∞–ª–∞–Ω—Å–∞
    updateBalance(gameState.balance - gameState.betAmount);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
    startScreen.classList.add('hidden');
    loadingScreen.classList.remove('hidden');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≥–æ–Ω–∫–∏
    setTimeout(() => {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –≥–æ–Ω–∫–∏
        loadingScreen.classList.add('hidden');
        raceScreen.classList.remove('hidden');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ–Ω–∫—É
        gameState.isRacing = true;
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —É–ª–∏—Ç–∫–∞—Ö –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Ä–µ–Ω–¥–µ—Ä–µ—Ä
        const snailsData = [
            { id: 'racer', name: '–ì–æ–Ω—â–∏–∫', color: 'üî¥', speed: 1.5, description: '–ë—ã—Å—Ç—Ä–∞—è —É–ª–∏—Ç–∫–∞ —Å —É—Å–∫–æ—Ä–µ–Ω–∏—è–º–∏' },
            { id: 'explorer', name: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', color: 'üü¢', speed: 1.2, description: '–õ—é–±–æ–ø—ã—Ç–Ω–∞—è —É–ª–∏—Ç–∫–∞' },
            { id: 'snake', name: '–ó–º–µ–π–∫–∞', color: 'üîµ', speed: 1.3, description: '–î–≤–∏–∂–µ—Ç—Å—è –∏–∑–≤–∏–ª–∏—Å—Ç—ã–º–∏ –ø—É—Ç—è–º–∏' },
            { id: 'stubborn', name: '–£–ø—Ä—è–º–∞—è', color: 'üü£', speed: 0.9, description: '–ú–æ–∂–µ—Ç –∑–∞—Å—Ç—Ä–µ–≤–∞—Ç—å' },
            { id: 'default', name: '–¢—É–ø–∏—á–æ–∫', color: 'üü°', speed: 1.1, description: '–õ—é–±–∏—Ç –∑–∞—Ö–æ–¥–∏—Ç—å –≤ —Ç—É–ø–∏–∫–∏' }
        ];
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–µ—Ä –≥–æ–Ω–∫–∏
        const canvas = document.getElementById('race-canvas');
        initRaceRenderer(canvas, snailsData, gameState.selectedSnail);
        startRaceRenderer();
    }, 3000);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É
function canStartRace() {
    return (
        gameState.selectedSnail !== null &&
        gameState.walletConnected &&
        gameState.betAmount > 0 &&
        gameState.betAmount <= gameState.balance
    );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–Ω–∫–∏
function handleRaceFinished(event) {
    const { winner, position, time } = event.detail;
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –≥–æ–Ω–∫—É
    gameState.isRacing = false;
    
    if (winner) {
        // –í—ã–∏–≥—Ä—ã—à
        const winAmount = gameState.betAmount * 2;
        updateBalance(gameState.balance + winAmount);
        resultMessage.textContent = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ —É–ª–∏—Ç–∫–∞ —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª–∞ ${position}-–π –∑–∞ ${time} —Å–µ–∫.`;
        winningsAmount.textContent = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount} –º–æ–Ω–µ—Ç!`;
        winningsAmount.classList.add('win');
        
        // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–±–µ–¥–µ
        if (tg.isExpanded && 'vibrate' in navigator) {
            navigator.vibrate([100, 50, 100]);
        }
    } else {
        // –ü—Ä–æ–∏–≥—Ä—ã—à
        resultMessage.textContent = `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ —É–ª–∏—Ç–∫–∞ —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª–∞ ${position}-–π –∑–∞ ${time} —Å–µ–∫.`;
        winningsAmount.textContent = `–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${gameState.betAmount} –º–æ–Ω–µ—Ç.`;
        winningsAmount.classList.add('loss');
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    raceScreen.classList.add('hidden');
    resultsScreen.classList.remove('hidden');
    
    // –°–æ–æ–±—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç Telegram
    tg.HapticFeedback.notificationOccurred(winner ? 'success' : 'error');
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –≤ Telegram
    tg.BackButton.show();
    tg.BackButton.onClick(() => resetGame());
}

// –°–±—Ä–æ—Å –∏–≥—Ä—ã
function resetGame() {
    gameState.selectedSnail = null;
    gameState.isRacing = false;
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–µ—Ä –≥–æ–Ω–∫–∏
    stopRaceRenderer();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —É–ª–∏—Ç–∫–∏
    document.querySelectorAll('.snail-button').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    betInput.value = '10';
    gameState.betAmount = 10;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å—ã –≤—ã–∏–≥—Ä—ã—à–∞/–ø—Ä–æ–∏–≥—Ä—ã—à–∞
    winningsAmount.classList.remove('win', 'loss');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –≤ Telegram
    tg.BackButton.hide();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
    resultsScreen.classList.add('hidden');
    raceScreen.classList.add('hidden');
    loadingScreen.classList.add('hidden');
    startScreen.classList.remove('hidden');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –≥–æ–Ω–∫—É
    checkCanStartRace();
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
document.addEventListener('DOMContentLoaded', () => {
    initGame();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∏–∑ Telegram
    initTelegramLauncher();
}); 