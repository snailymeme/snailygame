/**
 * Snail to Riches - Telegram Bot
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App
 */

const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
require('dotenv').config();

// ========== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ==========

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –∏–∑ .env —Ñ–∞–π–ª–∞
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!BOT_TOKEN) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤ .env —Ñ–∞–π–ª–µ.');
    process.exit(1);
}

// –ü–æ—Ä—Ç –¥–ª—è HTTP —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3001;

// ========== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ==========

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
const app = express();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.use(express.static(path.join(__dirname)));

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º polling
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// ========== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ==========

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ URL –∏–∑ —Ñ–∞–π–ª–∞
 * @returns {Promise<string|null>} URL –∏–ª–∏ null, –µ—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
async function getWebAppUrl() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
        if (fs.existsSync('ngrok-url.txt')) {
            const url = fs.readFileSync('ngrok-url.txt', 'utf8').trim();
            console.log('üìÑ –ü–æ–ª—É—á–µ–Ω URL –∏–∑ —Ñ–∞–π–ª–∞:', url);
            return url;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ URL:', error);
    }
    return null;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL
 * @param {string} url - URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {Promise<boolean>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
async function isUrlAccessible(url) {
    try {
        const response = await axios.get(url, {
            validateStatus: function (status) {
                return status >= 200 && status < 500;
            },
            timeout: 5000 // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        });
        return response.status === 200;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ URL:', error.message);
        return false;
    }
}

// ========== –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ==========

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ URL
let currentWebAppUrl = null;

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç URL –¥–ª—è WebApp
 * @returns {Promise<boolean>} true, –µ—Å–ª–∏ URL —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω
 */
async function updateWebAppUrl() {
    const newUrl = await getWebAppUrl();
    
    // –ï—Å–ª–∏ URL –ø–æ–ª—É—á–µ–Ω –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
    if (newUrl && newUrl !== currentWebAppUrl) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        if (await isUrlAccessible(newUrl)) {
            currentWebAppUrl = newUrl;
            console.log(`‚úÖ URL Web App –æ–±–Ω–æ–≤–ª–µ–Ω: ${currentWebAppUrl}`);
            return true;
        } else {
            console.error(`‚ùå URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${newUrl}`);
            return false;
        }
    }
    return false;
}

// ========== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ==========

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π URL –µ—Å–ª–∏ currentWebAppUrl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if (!currentWebAppUrl) {
        await updateWebAppUrl();
    }
    
    if (currentWebAppUrl) {
        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π Web App
        const keyboard = {
            inline_keyboard: [[
                {
                    text: 'üéÆ –ò–≥—Ä–∞—Ç—å',
                    web_app: { url: currentWebAppUrl }
                }
            ]]
        };
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å –≤ Snail to Riches?', {
            reply_markup: keyboard
        });
    } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: URL Web App –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
        bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∏–≥—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, `
*Snail to Riches - –ü–æ–º–æ—â—å*

–≠—Ç–æ –∏–≥—Ä–∞, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –Ω–∞ –≥–æ–Ω–∫–∏ —É–ª–∏—Ç–æ–∫ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞—Ç—å –ø—Ä–∏–∑—ã!

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

*–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:*
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üéÆ –ò–≥—Ä–∞—Ç—å"
2. –í—ã–±–µ—Ä–∏—Ç–µ —É–ª–∏—Ç–∫—É –∏ —Å–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É
3. –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –≥–æ–Ω–∫–æ–π –∏ –±–æ–ª–µ–π—Ç–µ –∑–∞ —Å–≤–æ—é —É–ª–∏—Ç–∫—É!
4. –ï—Å–ª–∏ –≤–∞—à–∞ —É–ª–∏—Ç–∫–∞ –ø–æ–±–µ–¥–∏—Ç, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤—ã–∏–≥—Ä—ã—à!
    `, {
        parse_mode: 'Markdown'
    });
});

// ========== –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ ==========

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ URL
const urlCheckInterval = setInterval(async () => {
    if (!currentWebAppUrl) {
        await updateWebAppUrl();
    }
}, 30000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

// ========== –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ==========

// –ó–∞–ø—É—Å–∫–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è URL
(async () => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å URL 5 —Ä–∞–∑ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 2 —Å–µ–∫—É–Ω–¥—ã
    for (let i = 0; i < 5; i++) {
        if (await updateWebAppUrl()) {
            console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å URL:', currentWebAppUrl);
            return;
        }
        console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ URL... (–ø–æ–ø—ã—Ç–∫–∞ ${i+1}/5)`);
        await new Promise(resolve => setTimeout(resolve, 2000));
    }
    
    console.log('‚ö†Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –±–µ–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ URL, –ø—Ä–æ–¥–æ–ª–∂–∏–º –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è URL –≤ —Ñ–æ–Ω–µ');
})();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.on('SIGINT', () => {
    console.log('üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...');
    clearInterval(urlCheckInterval);
    bot.stopPolling();
    console.log('üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!');
    process.exit(0);
}); 