/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Ä—Ç–æ–≤
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–µ –ø–æ—Ä—Ç—ã 3000 –∏ 3001
 */

const { execSync } = require('child_process');
const os = require('os');

// –ü–æ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å
const ports = [3000, 3001];

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –û–°
function getKillCommand(port) {
    const platform = os.platform();
    
    if (platform === 'win32') {
        // Windows
        return `FOR /F "tokens=5" %P IN ('netstat -ano ^| find ":${port}" ^| find "LISTENING"') DO taskkill /F /PID %P`;
    } else if (platform === 'darwin' || platform === 'linux') {
        // MacOS –∏–ª–∏ Linux
        return `lsof -ti :${port} | xargs -r kill -9`;
    } else {
        console.error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}`);
        return null;
    }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ngrok
console.log('üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ngrok...');
try {
    if (os.platform() === 'win32') {
        execSync('taskkill /F /IM ngrok.exe /T', { stdio: 'ignore' });
    } else {
        execSync('pkill -f ngrok', { stdio: 'ignore' });
    }
    console.log('‚úÖ ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
} catch (error) {
    console.log('‚ÑπÔ∏è ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

// –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã
console.log('üßπ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤...');

ports.forEach(port => {
    const command = getKillCommand(port);
    
    if (!command) return;
    
    try {
        console.log(`üîç –ü–æ–∏—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É ${port}...`);
        execSync(command, { stdio: 'ignore' });
        console.log(`‚úÖ –ü–æ—Ä—Ç ${port} –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω`);
    } catch (error) {
        console.log(`‚ÑπÔ∏è –ü–æ—Ä—Ç ${port} –Ω–µ –∑–∞–Ω—è—Ç –∏–ª–∏ —É–∂–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω`);
    }
});

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ node bot.js –∏ start-app.js
console.log('üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ node...');
try {
    if (os.platform() === 'win32') {
        execSync('taskkill /F /FI "IMAGENAME eq node.exe" /T', { stdio: 'ignore' });
    } else {
        execSync('pkill -f "node (bot\\.js|start-app\\.js|run-ngrok\\.js)"', { stdio: 'ignore' });
    }
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã node –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
} catch (error) {
    console.log('‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã node –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ—Ä—Ç—ã 3000 –∏ 3001 –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.'); 